## Comentários e Perguntas:

Pergunta 1 - Existe gerenciador de dependência para projetos C++?

Resposta 1 - Existe sim, se chama Nuget. Dá uma olhada neste link, está bem ilustrativo: https://www.treinaweb.com.br/blog/o-que-e-gerenciador-de-dependencias.

Pergunta 2 - Tu teria alguma indicação de livro para ler sobre o assunto? fiquei interessado em aprofundas mais o conhecimento principalmente no funcionamento do message 
broker, filas... achei alguns livros, mas não sei quais realmente são bons. Se puder me ajudar, por gentileza. 

Resposta 2 - Tens a Bibliografia básica e complementar para te auxiliar. Esta na sala de aula virtual. 

Pergunta 3 - Em relação a aplicação MONOLITO, a afirma de "quanto mais cliente tiver, mas aumenta o custo com servidores". Não consegui entender quais as circunstâncias 
que causariam esse efeito. 

Resposta 3 - Aplicações Monolíticas são sistemas únicos, que não são divididos e rodam em um único processo, ou seja, é uma aplicação onde diferentes componentes estão 
ligados a um único programa dentro de uma única plataforma. Com isso, seu nível de complexidade é muito menor que a arquitetura de monosserviços, mas desenvolvido em um 
único código, onde um pequeno problema pode causar a queda completa do serviço.  Assim, dependendo do número de acessos diários dos clientes, se faz necessário o 
investimento maior em servidores para que a aplicação única ou monolítica possa rodar, sem comprometimento, devido ao foto do código ser único. Conforme ocorrerem 
atualizações, esse sistema acaba aumentando e fica ainda mais complexo, exigindo reinicialização de todo sistema que pode causar perda temporária de funcionalidades. 
Logo, quando se trabalha com aplicações monolíticas, e sua abrangência, em relação a número de clientes e acessos aumenta, se faz necessário investir em servidores para 
que o monólito atenda de forma eficaz e eficiente aos clientes.

Pergunta 4 -  O conteúdo do portal (as aulas mais especificamente) fica disponivel por algum tempo depois que nós terminamos o curso da pós graduação ou ele encerra o 
acesso a esse portal?

Resposta 4 - Ficam disponíveis até 6 meses depois do término do curso. 

Pergunta 5 - or conta propria criei na empresa onde trabalho servicos para cada base de dados, por exemplo, base de dados Cadastro para o setor de cadastro, base 
Faturamento para o setor de faturamento, qualquer comunicação com essa s bases de dados criei um servico (no .Net um controller/API) é apenas comunicação interna, entao 
questões de segurando não foquei muito, pq o sistem só roda local. Enfim, o que acha disso? Criar servicos para comunicar com base de dados? Os servicos se comunicam 
entre si quando necessário. Isso são microserviços? Está correto isso ou poderia fazer de outra forma?

Resposta 5 - Esta correto sim. Os Controllers e Data Base devem está no Container da API e colocar o banco de dados no mesmo host do Docker pode ser bom para o 
desenvolvimento. Quando estiver desenvolvendo esse tipo de serviço, tu precisarás somente do ASP.NET Core da API de acesso a dados ou de um ORM (mapeador relacional 
de objeto) como o Entity Framework Core. Observe que executar um servidor de banco de dados como o SQL Server em um contêiner do Docker é ótimo para ambientes de 
desenvolvimento, porque todas as dependências podem funcionar sem precisar provisionar um banco de dados na nuvem ou localmente. Essa abordagem é conveniente ao 
executar testes de integração. No entanto, para ambientes de produção, executar um servidor de banco de dados em um contêiner não é recomendável, porque, geralmente, 
essa abordagem não oferece alta disponibilidade. Para um ambiente de produção no Azure, é recomendável usar o BD SQL do Azure ou qualquer outra tecnologia de banco de 
dados que possa fornecer alta disponibilidade e alta escalabilidade. Por exemplo, para uma abordagem NoSQL, você pode escolher o CosmosDB ou MongoDB ou Cassandra. 
