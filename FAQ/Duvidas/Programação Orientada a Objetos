## Comentários e Perguntas:

Comentário 1 -  Ainda vemos em vários sistemas (utilitários do windows, visual studio, delphi, etc) o uso de programação estruturada, usando o "velho" GOTO e tudo mais, como exemplo nos arquivos BATCH (*.BAT):

* O exemplo abaixo exibe computadores na rede e seus usuários conectados:
https://www.robvanderwoude.com/sourcecode.php?src=actusr_nt

* Outros:
https://www.robvanderwoude.com/batexamples.php

Resposta 1 - Sim, algumas empresas trabalham com soluções legadas ou desenvolvendo com programação estruturada, ainda, é bem comum no mercado de trabalho.

Comentário 2 - Corroborando com um dos itens exposto pelo professor, em uma das empresas que trabalhei a pouco tempo (a uns 3 anos atrás), mais de 90% do trabalho era de manutenção de códigos. Trabalhava com a linguagem Natural para computadores de grande porte (Mainframe). 

Resposta 2-  Isso mesmo. Outro exemplo de Empresa que trabalha com Mainframe ainda, é o Banrisul.

Comentário 3 - Turma segue grupo de estudos e networking que criei para a nossa disciplina: https://chat.whatsapp.com/JcCzfnUjLcRI7ZOEahJFn0.

Resposta 3 - Ótima iniciativa! Perfeito.

Pergunta 1 - Ao final desta aula o professor comenta sobre uma outra apresentação com novos conteúdos como as interfaces, porém nenhuma outra aula esta disponível. Este material sobre interfaces existe ou foi removido? Porque ele cita abranger assuntos de alta importância, mas não esta disponível para os alunos.

Resposta 1 - Os demais assuntos serão tratados nas próximas disciplinas, principalmente as relacionadas a interface.

Pergunta 2 - Não estou conseguindo rodar meu código do JSON no exemplo Objeto de Classe. Você explica essa parte no min 12:45. Quando rodo no node js aparece a seguinte 
mensagem: "Cannot use import stattement outside a module". Ele aponta para o "import" como erro. Sabe oq pode estar acontecendo?

Resposta 2 - Estás usando o npm para rodar o código? npm node index.js, por exemplo.

Pergunta 3 - Fiz um teste aqui protegendo o atributo matricula, mas não deu certo. Consegui alterar sem utilizar métodos internos ao objeto (como imagem anexa). 
Poderia me ajudar a encontrar o erro? 

Resposta 3 -  Vou responder por detalhado para ficar bem claro, certo? 1 - Criaste a Classe Pessoa, enviando os atributos, por parâmetro e setando, com o "this" para 
a variável declarada nos parâmetros ou entre os parênteses e criaste dois métodos para imprimir na tela o nome da pessoa e o calculo da idade - Correto; 2 - Criastes 
a classe Estudante que herda, através da palavra "extends" as variáveis da classe Pessoa. Encapsulaste a matricula e criaste o método "getMatricula()", justamente 
para imprimir o que está dentro da variável, que se encontra encapsulada, Criaste, também o método "ola()" para imprimir "colega!"  - Neste caso, como a variável 
está privada tu podes chamar o método "getMatricula()", que é público e no "return" (eu desencapsularia a variável matricula para não haver problemas, visto que está 
privada). 3 - Criaste uma variável constante, chamada aluno, que é o objeto e enviaste por parâmetro os dados - correto. Com o "console.log" tu estás imprimindo a 
matricula original, chamando, com auxílio o objeto a variável matricula que está privada. Depois tu insere um valor constante na variável matricula, ou seja, o 2. E 
pede sua impressão no "console.log()" - Neste momento tu estás alterando de forma estática o valor contigo na variável e por isso ele acaba recebendo um novo valor e 
altera a matricula original  que é 120901 - Essa dado está na linha onde crias o construtor, dentro dos parênteses ou parâmetros. Quando tu alteras o número da 
matricula na linha aluno.#matricula = 2 tu estás alterando o valor original para um novo valor, ou seja 2. Se nesta linha tu chamares o método "getMatricula()" e 
alterar o valor da matricula dentro dos parentes, tu vais deixar de usar a variável que está privada e passará a usar o método, que é o que comumente se faz quando 
se trabalha com variável privadas - devemos sempre priorizar o uso do método publico.  Assim, tu podes alterar, dentro do método o valor da matricula, em 
"aluno.getMatricula(2)" e imprimir a nova matricula usando o objeto + o método getMatricula(2). A matricula será alterada e não vais precisar utilizar a variável 
privada, o que soluciona teu problema.

Pergunta 4 - Queria entender por que o atributo notas da classe Estudante foi declarado fora do construtor e sem a palavra this. QUal é a diferença desta forma de 
declaração para as demais que foram feitas até agora (dentro dos construtores das classes recedidos por this.)?

Resposta 4 - Não encontrei o atributo notas na classe Estudante, terás de declará-la nos parênteses e utilizar o "this". Utilizamos o "this " justamente para linkar 
o que o atributo recebe com o que está sendo enviando por parâmetro. 
